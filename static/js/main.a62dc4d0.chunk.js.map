{"version":3,"sources":["components/Stars.js","App.js","reportWebVitals.js","index.js"],"names":["Stars","rating","stars","i","push","icon","faStar","style","color","App","useFetch","isLoading","error","data","display","meals","map","meal","Col","sm","xs","md","position","Card","borderBottomLeftRadius","marginBottom","borderTopRightRadius","Img","src","strMealThumb","alt","height","Body","Title","justifyContent","title","price","Subtitle","className","strMeal","Text","string","description","limit","length","substring","paddingLeft","ratings","right","bottom","Button","backgroundColor","border","borderTopLeftRadius","fontSize","fontWeight","width","padding","Container","Row","textAlign","borderRadius","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAgBiBA,EAbH,SAAC,GAEX,IAFyB,IAAbC,EAAY,EAAZA,OACRC,EAAQ,GACHC,EAAI,EAAGA,EAAIF,IAAUE,EAC5BD,EAAME,KAAK,cAAC,IAAD,CAAiBC,KAAOC,IAAgBC,MAAO,CAACC,MAAM,YAAjBL,IAGlD,OACE,4BAAID,KCkFKO,MAjFf,WAAgB,IAAD,EACsBC,IAAS,iDAApCC,EADK,EACLA,UAAWC,EADN,EACMA,MAAOC,EADb,EACaA,KAE1B,GAAIF,EAAW,MAAO,aACtB,GAAIC,EAAO,MAAO,SAElB,IASME,EAAUD,EAAKA,KAAKE,MAAMC,KAAK,SAAAC,GAAI,OAEvC,cAACC,EAAA,EAAD,CAAKC,IAAE,EAACC,GAAI,GAAIC,GAAK,EAAGd,MAAQ,CAACe,SAAS,YAA1C,SACE,eAACC,EAAA,EAAD,CAAMhB,MAAS,CAACiB,uBAAuB,OAAOC,aAAa,OAAOC,qBAAqB,QAAvF,UACE,cAAEH,EAAA,EAAKI,IAAP,CAAuBC,IAAMX,EAAKY,aAAcC,IAAI,cAAcvB,MAAS,CAACwB,OAAO,QAAUP,uBAAuB,OAAQE,qBAAqB,SAAhIT,GACjB,eAACM,EAAA,EAAKS,KAAN,WACE,cAACT,EAAA,EAAKU,MAAN,UACE,sBAAK1B,MAAS,CAACO,QAAS,OAAQoB,eAAe,iBAA/C,UACE,8BACCjB,EAAKkB,QAEN,8BACClB,EAAKmB,YANSnB,GAYnB,cAACM,EAAA,EAAKc,SAAN,CAAeC,UAAU,kBAAzB,SACCrB,EAAKsB,SAD4CtB,GAIlD,cAACM,EAAA,EAAKiB,KAAN,WA/BeC,EAgCIxB,EAAKyB,YAhCDC,EAgCc,IA/BvCF,EAAOG,OAASD,EACXF,EAAOI,UAAU,EAAGF,GAAS,eAE7BF,IA2BexB,MAOpB,cAACM,EAAA,EAAKS,KAAN,UACC,sBAAKzB,MAAS,CAACO,QAAS,OAAQoB,eAAe,iBAA/C,UACK,qBAAK3B,MAAO,CAACuC,YAAY,QAAzB,SACE,cAAE,EAAF,CAAqB7C,OAAUgB,EAAK8B,SAArB9B,KAEjB,qBAAMV,MAAO,CAACe,SAAS,WAAY0B,MAAM,MAAMC,OAAO,OAAtD,SACE,cAACC,EAAA,EAAD,CAAS3C,MAAO,CAAE4C,gBAAgB,UAAWC,OAAQ,OAAQC,oBAAoB,OAAQC,SAAS,OAASC,WAAW,MAAMC,MAAM,QAASC,QAAQ,OAAnJ,4BA5CQ,IAAChB,EAAQE,KA6D/B,OACE,mCACE,eAACe,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACG7C,IAEH,qBAAKP,MAAQ,CAACqD,UAAU,SAAUnC,aAAa,QAA/C,SACE,cAACyB,EAAA,EAAD,CAAQ3C,MAAO,CAAC4C,gBAAgB,UAAWC,OAAO,OAAQS,aAAa,OAAQJ,QAAQ,YAAvF,gCCzEKK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a62dc4d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\r\nconst Stars = ({rating}) => {\r\n    let stars = []\r\n    for (let i = 0; i < rating; ++i) {\r\n      stars.push(<FontAwesomeIcon icon= {faStar} key={i} style={{color:'#faa725'}}/>)\r\n    }\r\n  \r\n    return (\r\n      <i>{stars}</i>\r\n        \r\n     \r\n    )\r\n  }\r\n  \r\n  export default Stars","\nimport './App.css';\nimport React from \"react\";\nimport useFetch from \"react-fetch-hook\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container,Row,Col,Button,Card} from 'react-bootstrap';\nimport Stars from \"./components/Stars\"\n\n\n\n\nfunction App() {\n  const { isLoading, error, data } = useFetch(\"https://asm-dev-api.herokuapp.com/api/v1/food\");\n\n  if (isLoading) return \"Loading...\";\n  if (error) return \"Error!\";\n\n  const truncateString= (string, limit) =>{\n    if (string.length > limit) {\n      return string.substring(0, limit) + \" and more...\"\n    } else {\n      return string\n    }\n  }\n   \n  \n  const display = data.data.meals.map( meal =>\n  \n    <Col sm xs={12} md= {4} style ={{position:'relative'}} >\n      <Card style = {{borderBottomLeftRadius:'20px',marginBottom:'30px',borderTopRightRadius:'20px'}}>\n        < Card.Img key ={meal} src= {meal.strMealThumb} alt=\"random user\" style = {{height:'18rem' , borderBottomLeftRadius:'20px', borderTopRightRadius:'20px'}} />\n        <Card.Body>\n          <Card.Title key = {meal}>\n            <div style = {{display: 'flex', justifyContent:'space-between'}}>\n              <div>\n              {meal.title}\n              </div>\n              <div >\n              {meal.price}\n              </div>\n             \n            </div>\n         \n          </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\" key = {meal}>\n          {meal.strMeal}\n\n          </Card.Subtitle>\n          <Card.Text key = {meal} >\n             {truncateString(meal.description ,120)}\n          </Card.Text>\n          \n\n          \n        </Card.Body>\n        <Card.Body>\n         <div style = {{display: 'flex', justifyContent:'space-between'}}>\n              <div style={{paddingLeft:'15px'}}>\n                < Stars key = {meal} rating = {meal.ratings}/>\n              </div>\n              <div  style={{position:'absolute', right:'0px',bottom:'0px'}}>\n                <Button  style={{ backgroundColor:\"#fa9e0d\", border :'none', borderTopLeftRadius:'20px', fontSize:'3rem',  fontWeight:'100',width:'100px', padding:'0px' }}> +</Button>\n              </div>\n             \n          </div>\n         \n        \n        \n\n        </Card.Body>\n  \n      </Card>\n \n    </Col>\n\n  \n  \n    )\n  return (\n    <>\n      <Container>\n        <Row >\n          {display}\n        </Row>\n        <div style ={{textAlign:'center', marginBottom:'20px' }}>\n          <Button style={{backgroundColor:\"#fa9e0d\", border:'none', borderRadius:'20px', padding:'5px 2rem' }}>Learn More</Button>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}